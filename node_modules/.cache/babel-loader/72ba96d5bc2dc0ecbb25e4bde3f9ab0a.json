{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport inflection from 'inflection';\nimport pure from 'recompose/pure';\nimport compose from 'recompose/compose';\nimport translate from '../i18n/translate';\nexport var FieldTitle = function FieldTitle(_a) {\n  var resource = _a.resource,\n      source = _a.source,\n      label = _a.label,\n      isRequired = _a.isRequired,\n      translate = _a.translate;\n  return React.createElement(\"span\", null, typeof label !== 'undefined' ? translate(label, {\n    _: label\n  }) : typeof source !== 'undefined' ? translate(\"resources.\" + resource + \".fields.\" + source, {\n    _: inflection.transform(source, ['underscore', 'humanize'])\n  }) : '', isRequired && ' *');\n};\nFieldTitle.propTypes = {\n  isRequired: PropTypes.bool,\n  resource: PropTypes.string,\n  source: PropTypes.string,\n  label: PropTypes.string,\n  translate: PropTypes.func.isRequired\n};\nFieldTitle.defaultProps = {\n  translate: function translate(x) {\n    return x;\n  }\n}; // wat? TypeScript looses the displayName if we don't set it explicitly\n\nFieldTitle.displayName = 'FieldTitle';\nvar enhance = compose(translate, pure);\nexport default enhance(FieldTitle);","map":null,"metadata":{},"sourceType":"module"}