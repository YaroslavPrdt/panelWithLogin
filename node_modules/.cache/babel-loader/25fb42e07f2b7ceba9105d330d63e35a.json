{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles } from '@material-ui/core/styles';\nimport LockIcon from '@material-ui/icons/Lock';\nimport defaultTheme from '../defaultTheme';\nimport Notification from '../layout/Notification';\nimport DefaultLoginForm from './LoginForm';\n\nvar styles = function styles(theme) {\n  return {\n    main: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh',\n      height: '1px',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      background: 'url(https://source.unsplash.com/random/1600x900)',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover'\n    },\n    card: {\n      minWidth: 300,\n      marginTop: '6em'\n    },\n    avatar: {\n      margin: '1em',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    icon: {\n      backgroundColor: theme.palette.secondary[500]\n    }\n  };\n};\n\nvar sanitizeRestProps = function sanitizeRestProps(_a) {\n  var classes = _a.classes,\n      className = _a.className,\n      location = _a.location,\n      title = _a.title,\n      array = _a.array,\n      theme = _a.theme,\n      staticContext = _a.staticContext,\n      rest = __rest(_a, [\"classes\", \"className\", \"location\", \"title\", \"array\", \"theme\", \"staticContext\"]);\n\n  return rest;\n};\n/**\n * A standalone login page, to serve as authentication gate to the admin\n *\n * Expects the user to enter a login and a password, which will be checked\n * by the `authProvider` using the AUTH_LOGIN verb. Redirects to the root page\n * (/) upon success, otherwise displays an authentication error message.\n *\n * Copy and adapt this component to implement your own login logic\n * (e.g. to authenticate via email or facebook or anything else).\n *\n * @example\n *     import MyLoginPage from './MyLoginPage';\n *     const App = () => (\n *         <Admin loginPage={MyLoginPage} authProvider={authProvider}>\n *             ...\n *        </Admin>\n *     );\n */\n\n\nvar Login = function Login(_a) {\n  var classes = _a.classes,\n      className = _a.className,\n      loginForm = _a.loginForm,\n      rest = __rest(_a, [\"classes\", \"className\", \"loginForm\"]);\n\n  return React.createElement(\"div\", __assign({\n    className: classnames(classes.main, className)\n  }, sanitizeRestProps(rest)), React.createElement(Card, {\n    className: classes.card\n  }, React.createElement(\"div\", {\n    className: classes.avatar\n  }, React.createElement(Avatar, {\n    className: classes.icon\n  }, React.createElement(LockIcon, null))), loginForm), React.createElement(Notification, null));\n};\n\nLogin.propTypes = {\n  className: PropTypes.string,\n  authProvider: PropTypes.func,\n  classes: PropTypes.object,\n  input: PropTypes.object,\n  meta: PropTypes.object,\n  previousRoute: PropTypes.string,\n  loginForm: PropTypes.element\n};\nLogin.defaultProps = {\n  theme: defaultTheme,\n  loginForm: React.createElement(DefaultLoginForm, null)\n};\nexport default withStyles(styles)(Login);","map":null,"metadata":{},"sourceType":"module"}