{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport get from 'lodash/get';\nimport { crudGetManyAccumulate as crudGetManyAccumulateAction } from '../../actions';\nimport { linkToRecord } from '../../util';\n/**\n * Fetch reference record, and delegate rendering to child component.\n *\n * The reference prop sould be the name of one of the <Resource> components\n * added as <Admin> child.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * By default, includes a link to the <Edit> page of the related record\n * (`/users/:userId` in the previous example).\n *\n * Set the linkType prop to \"show\" to link to the <Show> page instead.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" linkType=\"show\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * You can also prevent `<ReferenceField>` from adding link to children by setting\n * `linkType` to false.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" linkType={false}>\n *     <TextField source=\"name\" />\n * </ReferenceField>\n */\n\nvar ReferenceFieldController =\n/** @class */\nfunction (_super) {\n  __extends(ReferenceFieldController, _super);\n\n  function ReferenceFieldController() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ReferenceFieldController.prototype.componentDidMount = function () {\n    this.fetchReference(this.props);\n  };\n\n  ReferenceFieldController.prototype.componentWillReceiveProps = function (nextProps) {\n    if (this.props.record.id !== nextProps.record.id) {\n      this.fetchReference(nextProps);\n    }\n  };\n\n  ReferenceFieldController.prototype.fetchReference = function (props) {\n    var source = get(props.record, props.source);\n\n    if (source !== null && typeof source !== 'undefined') {\n      this.props.crudGetManyAccumulate(props.reference, [source]);\n    }\n  };\n\n  ReferenceFieldController.prototype.render = function () {\n    var _a = this.props,\n        allowEmpty = _a.allowEmpty,\n        basePath = _a.basePath,\n        children = _a.children,\n        linkType = _a.linkType,\n        record = _a.record,\n        reference = _a.reference,\n        referenceRecord = _a.referenceRecord,\n        resource = _a.resource,\n        source = _a.source;\n    var rootPath = basePath.replace(resource, reference);\n    var resourceLinkPath = !linkType ? false : linkToRecord(rootPath, get(record, source), linkType);\n    return children({\n      isLoading: !referenceRecord && !allowEmpty,\n      referenceRecord: referenceRecord,\n      resourceLinkPath: resourceLinkPath\n    });\n  };\n\n  return ReferenceFieldController;\n}(Component);\n\nexport { ReferenceFieldController };\nReferenceFieldController.propTypes = {\n  addLabel: PropTypes.bool,\n  allowEmpty: PropTypes.bool.isRequired,\n  basePath: PropTypes.string.isRequired,\n  children: PropTypes.func.isRequired,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  cellClassName: PropTypes.string,\n  headerClassName: PropTypes.string,\n  crudGetManyAccumulate: PropTypes.func.isRequired,\n  label: PropTypes.string,\n  record: PropTypes.object,\n  reference: PropTypes.string.isRequired,\n  referenceRecord: PropTypes.object,\n  resource: PropTypes.string,\n  sortBy: PropTypes.string,\n  source: PropTypes.string.isRequired,\n  translateChoice: PropTypes.func,\n  linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired\n};\nReferenceFieldController.defaultProps = {\n  allowEmpty: false,\n  classes: {},\n  linkType: 'edit',\n  referenceRecord: null,\n  record: {}\n};\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    referenceRecord: state.admin.resources[props.reference] && state.admin.resources[props.reference].data[get(props.record, props.source)]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  crudGetManyAccumulate: crudGetManyAccumulateAction\n})(ReferenceFieldController);","map":null,"metadata":{},"sourceType":"module"}