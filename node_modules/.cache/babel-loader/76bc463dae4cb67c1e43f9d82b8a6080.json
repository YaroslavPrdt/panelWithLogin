{"ast":null,"code":"import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from 'react-admin';\nexport default (function (type, params) {\n  // called when the user attempts to log in\n  if (type === AUTH_LOGIN) {\n    var username = params.username;\n    localStorage.setItem('username', username); // accept all username/password combinations\n\n    return Promise.resolve();\n  } // called when the user clicks on the logout button\n\n\n  if (type === AUTH_LOGOUT) {\n    localStorage.removeItem('username');\n    return Promise.resolve();\n  } // called when the API returns an error\n\n\n  if (type === AUTH_ERROR) {\n    var status = params.status;\n\n    if (status === 401 || status === 403) {\n      localStorage.removeItem('username');\n      return Promise.reject();\n    }\n\n    return Promise.resolve();\n  } // called when the user navigates to a new location\n\n\n  if (type === AUTH_CHECK) {\n    return localStorage.getItem('username') ? Promise.resolve() : Promise.reject();\n  }\n\n  return Promise.reject('Unknown method');\n});","map":{"version":3,"sources":["/home/yaroslav/test-admin/src/authProvider.js"],"names":["AUTH_LOGIN","AUTH_LOGOUT","AUTH_ERROR","AUTH_CHECK","type","params","username","localStorage","setItem","Promise","resolve","removeItem","status","reject","getItem"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,EAA8CC,UAA9C,QAAgE,aAAhE;AAEA,gBAAe,UAACC,IAAD,EAAOC,MAAP,EAAkB;AAC7B;AACA,MAAID,IAAI,KAAKJ,UAAb,EAAyB;AAAA,QACbM,QADa,GACAD,MADA,CACbC,QADa;AAErBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,QAAjC,EAFqB,CAGrB;;AACA,WAAOG,OAAO,CAACC,OAAR,EAAP;AACH,GAP4B,CAQ7B;;;AACA,MAAIN,IAAI,KAAKH,WAAb,EAA0B;AACtBM,IAAAA,YAAY,CAACI,UAAb,CAAwB,UAAxB;AACA,WAAOF,OAAO,CAACC,OAAR,EAAP;AACH,GAZ4B,CAa7B;;;AACA,MAAIN,IAAI,KAAKF,UAAb,EAAyB;AAAA,QACbU,MADa,GACFP,MADE,CACbO,MADa;;AAErB,QAAIA,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AAClCL,MAAAA,YAAY,CAACI,UAAb,CAAwB,UAAxB;AACA,aAAOF,OAAO,CAACI,MAAR,EAAP;AACH;;AACD,WAAOJ,OAAO,CAACC,OAAR,EAAP;AACH,GArB4B,CAsB7B;;;AACA,MAAIN,IAAI,KAAKD,UAAb,EAAyB;AACrB,WAAOI,YAAY,CAACO,OAAb,CAAqB,UAArB,IACDL,OAAO,CAACC,OAAR,EADC,GAEDD,OAAO,CAACI,MAAR,EAFN;AAGH;;AACD,SAAOJ,OAAO,CAACI,MAAR,CAAe,gBAAf,CAAP;AACH,CA7BD","sourcesContent":["import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from 'react-admin';\n\nexport default (type, params) => {\n    // called when the user attempts to log in\n    if (type === AUTH_LOGIN) {\n        const { username } = params;\n        localStorage.setItem('username', username);\n        // accept all username/password combinations\n        return Promise.resolve();\n    }\n    // called when the user clicks on the logout button\n    if (type === AUTH_LOGOUT) {\n        localStorage.removeItem('username');\n        return Promise.resolve();\n    }\n    // called when the API returns an error\n    if (type === AUTH_ERROR) {\n        const { status } = params;\n        if (status === 401 || status === 403) {\n            localStorage.removeItem('username');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    }\n    // called when the user navigates to a new location\n    if (type === AUTH_CHECK) {\n        return localStorage.getItem('username')\n            ? Promise.resolve()\n            : Promise.reject();\n    }\n    return Promise.reject('Unknown method');\n};"]},"metadata":{},"sourceType":"module"}